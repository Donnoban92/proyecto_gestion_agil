# Generated by Django 5.2.3 on 2025-06-18 08:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import inventario.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertaStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, null=True)),
                ('fecha_silencio', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('activa', 'Activa'), ('pendiente', 'Pendiente'), ('archivada', 'Archivada'), ('silenciada', 'Silenciada'), ('inactiva', 'Inactiva')], default='activa', max_length=32)),
                ('usada_para_orden', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Alerta de Stock',
                'verbose_name_plural': 'Alertas de Stock',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=128, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
            },
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Ciudad',
                'verbose_name_plural': 'Ciudades',
            },
        ),
        migrations.CreateModel(
            name='Kit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=128)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Kit de Productos',
                'verbose_name_plural': 'Kits de Productos',
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('correo', models.EmailField(default='usuario-temporal@correo.cl', help_text='ejemplo@correo.cl', max_length=64, unique=True)),
                ('rut', models.CharField(help_text='Formato: 12.345.678-9', max_length=12, unique=True)),
                ('telefono', models.CharField(help_text='Formato: +56912345678', max_length=16)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrador'), ('INVENTARIO', 'Gestor de Inventario'), ('COMPRADOR', 'Comprador'), ('LOGISTICA', 'Encargado de Logística'), ('PRODUCCION', 'Jefe de Producción'), ('AUDITOR', 'Auditor'), ('PROYECTOS', 'Gerente de Proyectos'), ('PLANTA', 'Trabajador de Planta')], default='PLANTA', max_length=16)),
                ('direccion', models.CharField(max_length=128)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('cargo', models.ForeignKey(help_text='Nombre del cargo', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.cargo')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Auditoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo_afectado', models.CharField(max_length=128)),
                ('id_objeto', models.PositiveIntegerField()),
                ('accion', models.CharField(choices=[('crear', 'Crear'), ('actualizar', 'Actualizar'), ('eliminar', 'Eliminar')], max_length=32)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('descripcion', models.TextField()),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Auditoría',
                'verbose_name_plural': 'Registros de Auditoría',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Comuna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=64)),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comunas', to='inventario.ciudad')),
            ],
            options={
                'verbose_name': 'Comuna',
                'verbose_name_plural': 'Comunas',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='comuna',
            field=models.ForeignKey(help_text='Comuna del usuario', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.comuna'),
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único del lote', max_length=64, unique=True)),
                ('fecha_fabricacion', models.DateField(blank=True, null=True)),
                ('fecha_vencimiento', models.DateField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lotes', to='inventario.categoria')),
            ],
            options={
                'verbose_name': 'Lote',
                'verbose_name_plural': 'Lotes',
                'ordering': ['-fecha_fabricacion'],
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.TextField()),
                ('leida', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='OrdenAutomatica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_ordenada', models.PositiveIntegerField(default=0)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('completada', 'Completada'), ('cancelada', 'Cancelada'), ('eliminada', 'Eliminada'), ('anulada', 'Anulada'), ('rechazada', 'Rechazada'), ('inactiva', 'Inactiva')], default='pendiente', max_length=32)),
                ('usada_para_ingreso', models.BooleanField(default=False)),
                ('alerta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.alertastock')),
            ],
            options={
                'verbose_name': 'Orden Automática',
                'verbose_name_plural': 'Órdenes Automáticas',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='CotizacionProveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('aceptada', 'Aceptada'), ('rechazada', 'Rechazada')], default='pendiente', max_length=16)),
                ('monto', models.PositiveIntegerField()),
                ('archivo_pdf', models.FileField(blank=True, null=True, upload_to='cotizaciones/pdf/')),
                ('orden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cotizaciones', to='inventario.ordenautomatica')),
            ],
            options={
                'verbose_name': 'Cotización de Proveedor',
                'verbose_name_plural': 'Cotizaciones de Proveedores',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.AddField(
            model_name='alertastock',
            name='orden_relacionada',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.ordenautomatica'),
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=128)),
                ('descripcion', models.TextField(blank=True)),
                ('precio', models.PositiveIntegerField(validators=[inventario.validators.validar_precio_positivo])),
                ('stock', models.PositiveIntegerField(validators=[inventario.validators.validar_stock_no_negativo])),
                ('stock_minimo', models.PositiveIntegerField(default=20, validators=[inventario.validators.validar_stock_minimo_no_negativo])),
                ('codigo_barra', models.CharField(max_length=64, unique=True, validators=[django.core.validators.MinLengthValidator(8)])),
                ('sku', models.CharField(default='SKU-generico', max_length=64, unique=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('habilitado', models.BooleanField(default=True)),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productos', to='inventario.lote')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OrdenAutomaticaItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_ordenada', models.PositiveIntegerField()),
                ('alerta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventario.alertastock')),
                ('orden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventario.ordenautomatica')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventario.producto')),
            ],
            options={
                'verbose_name': 'Ítem de Orden',
                'verbose_name_plural': 'Ítems de Órdenes',
            },
        ),
        migrations.AddField(
            model_name='ordenautomatica',
            name='producto',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='inventario.producto'),
        ),
        migrations.CreateModel(
            name='KitItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField()),
                ('kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventario.kit')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventario.producto')),
            ],
            options={
                'verbose_name': 'Ítem de Kit',
                'verbose_name_plural': 'Ítems de Kit',
            },
        ),
        migrations.CreateModel(
            name='InventarioFisico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_real', models.PositiveIntegerField()),
                ('fecha_conteo', models.DateTimeField(auto_now_add=True)),
                ('diferencia', models.IntegerField()),
                ('responsable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.producto')),
            ],
            options={
                'verbose_name': 'Inventario Físico',
                'verbose_name_plural': 'Inventarios Físicos',
                'ordering': ['-fecha_conteo'],
            },
        ),
        migrations.AddField(
            model_name='alertastock',
            name='producto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.producto'),
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=128, unique=True)),
                ('rut', models.CharField(help_text='Formato: 76.453.678-1', max_length=12, unique=True)),
                ('direccion', models.CharField(max_length=128)),
                ('telefono', models.CharField(blank=True, help_text='+56911223344', max_length=16)),
                ('correo', models.EmailField(default='usuario-temporal@correo.cl', help_text='ejemplo@correo.cl', max_length=64, unique=True)),
                ('comuna', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.comuna')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='ordenautomatica',
            name='proveedor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventario.proveedor'),
        ),
        migrations.AddField(
            model_name='lote',
            name='proveedor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lotes', to='inventario.proveedor'),
        ),
        migrations.CreateModel(
            name='HistorialPrecioProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio', models.PositiveIntegerField()),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.producto')),
                ('proveedor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.proveedor')),
            ],
            options={
                'verbose_name': 'Historial de Precio',
                'verbose_name_plural': 'Historiales de Precios',
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='EntradaInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveBigIntegerField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('precio_unitario', models.PositiveIntegerField(default=0)),
                ('total', models.PositiveIntegerField(default=0)),
                ('orden', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.ordenautomatica')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.producto')),
                ('proveedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.proveedor')),
            ],
            options={
                'verbose_name': 'Entrada de Inventario',
                'verbose_name_plural': 'Entradas de Inventario',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=64)),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regiones', to='inventario.pais')),
            ],
            options={
                'verbose_name': 'Región',
                'verbose_name_plural': 'Regiones',
            },
        ),
        migrations.AddField(
            model_name='ciudad',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ciudades', to='inventario.region'),
        ),
        migrations.CreateModel(
            name='SalidaInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('motivo', models.CharField(choices=[('merma', 'Merma/Pérdida'), ('consumo', 'Consumo Interno'), ('devolucion', 'Devolución a Proveedor'), ('ajuste', 'Ajuste Manual')], max_length=128)),
                ('observacion', models.TextField(blank=True)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.producto')),
                ('responsable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Salida de Inventario',
                'verbose_name_plural': 'Salidas de Inventario',
                'ordering': ['-fecha'],
            },
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['rut'], name='inventario__rut_5630a1_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['username'], name='inventario__usernam_34fe13_idx'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['nombre'], name='inventario__nombre_2dddb1_idx'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['codigo_barra'], name='inventario__codigo__35b91c_idx'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['sku'], name='inventario__sku_814480_idx'),
        ),
        migrations.AddIndex(
            model_name='lote',
            index=models.Index(fields=['codigo'], name='inventario__codigo_b6db2d_idx'),
        ),
        migrations.AddIndex(
            model_name='lote',
            index=models.Index(fields=['fecha_vencimiento'], name='inventario__fecha_v_d666fe_idx'),
        ),
    ]
